import multer from "multer";
import { getAvatar, uploadAvatar } from "../controllers/avatarsController.js";
import { verifyToken } from "../middleware/authMiddleware.js";
import express from "express";

const router = express.Router();
const upload = multer({ storage: multer.memoryStorage() });

// ----------------------------------------------------
// GET / (–û—Ç—Ä–∏–º–∞—Ç–∏ –∞–≤–∞—Ç–∞—Ä–∏)
// ----------------------------------------------------
router.get("/", verifyToken, async (req, res, next) => {
  try {
    const userId = req.user.uid || req.user._id;

    if (!userId) {
      // –¢—É—Ç –¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏, —è–∫—â–æ verifyToken –ø—Ä–æ–ø—É—Å—Ç–∏–≤ –±–µ–∑ uid
      return res
        .status(401)
        .json({ message: "Unauthorized: Missing user ID." });
    }

    // üõë –ü–ï–†–ï–î–ê–Ñ–ú–û –¢–û–ö–ï–ù —É –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä
    const result = await getAvatar(userId);

    // ‚úÖ –í–∏–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—Ö
    res.status(200).json({ message: "–ê–≤–∞—Ç–∞—Ä–∏ —É—Å–ø—ñ—à–Ω–æ –æ—Ç—Ä–∏–º–∞–Ω–æ", result });
  } catch (err) {
    next(err);
  }
});

// ----------------------------------------------------
// POST /upload (–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∞–≤–∞—Ç–∞—Ä)
// ----------------------------------------------------
router.post(
  "/upload",
  verifyToken,
  upload.single("file"),
  async (req, res, next) => {
    try {
      const userId = req.user.uid || req.user._id;
      // üõë –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ —Ñ–∞–π–ª—É (–ø—Ä–æ–±–ª–µ–º–∞ 400 Bad Request)
      if (!req.file) {
        return res
          .status(400)
          .json({
            message: "File not found. Ensure the field name is 'file'.",
          });
      }

      if (!userId) {
        return res
          .status(401)
          .json({ message: "Unauthorized: Missing user ID." });
      } // üõë –ü–ï–†–ï–î–ê–Ñ–ú–û –¢–û–ö–ï–ù —É –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä

      const result = await uploadAvatar(userId, req.file);

      res.status(201).json({ message: "–ê–≤–∞—Ç–∞—Ä —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ", result });
    } catch (err) {
      next(err);
    }
  }
);

export default router;
